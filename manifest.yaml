id: nostrudel
title: "noStrudel"
version: 0.41.0.0
release-notes: |
  ### Minor Changes

  - Add option to wipe wasm relay database
  - Update `@snort/worker-relay` WASM relay
  - Add Support for embedding HLS videos
  - Support pinning articles
  - Add relay discovery map
  - Add option to disable keyboard shortcuts

  ### Patch Changes

  - Fixed search results not being cached
  - Fix amber signer missing pubkey
  - Fix some tidal embeds not playing
  - Hide avatars of muted users
  - Fix bookmark view not showing latest bookmarks
  - Fixed client sending filters with empty #a tags
  - Fix client tag breaking POW on notes
  - Add noStrudel NIP-05 to domain
  - Update bitcoin connect
  - Fix relay notes showing notes from other relays from cache
  - Improve notifications timeline rendering performance
  - Add bookmark button to articles
  - Fixed keyboard shortcuts activating when replying to notification

license: MIT
wrapper-repo: "https://github.com/hzrd149/nostrudel-startos"
upstream-repo: "https://github.com/hzrd149/nostrudel"
support-site: "https://github.com/hzrd149/nostrudel/issues"
marketing-site: "https://github.com/hzrd149/nostrudel"
donation-url: "https://geyser.fund/project/nostrudel"
build: ["make"]
description:
  short: A sandbox for exploring nostr
  long: |
    noStrudel is a nostr web client that is focused on exploring the nostr network.
    The focus is on power users or any other users who want to learn the inner workings of nostr.
assets:
  license: LICENSE
  icon: icon.svg
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /root
    cert: /mnt/cert
health-checks:
  web-ui:
    name: Web UI
    success-message: noStrudel is ready
    type: script
config: ~
properties: ~
volumes:
  main:
    type: data
  cert:
    type: certificate
    interface-id: main
interfaces:
  main:
    name: User Interface
    description: A user interface that is expected to host noStrudel web app.
    tor-config:
      port-mapping:
        80: "80"
        443: "3443"
    lan-config:
      443:
        ssl: true
        internal: 8080
    ui: true
    protocols:
      - tcp
      - http
dependencies: {}
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup"
      main: "/root/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup"
      main: "/root/data"
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
